/*
cleaning data
checking for missing values in the table from the bronze layer
standarization of data
handing wrong date type 
*/

--- inserting cleaned data in silver.cust_info from bronze.cust_info

truncate table silver.crm_cust_info
insert into silver.crm_cust_info (
	cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date
)
select cst_id,cst_key,
		trim(cst_firstname) as cst_firstname,
		trim(cst_lastname) as cst_lastname,
		case when UPPER(trim(cst_marital_status))='S' then 'Single'
			when UPPER(TRIM( cst_marital_status)) = 'M' then 'Married'
			else 'n/a'
			end as cst_marital_status,
		case when UPPER(trim(cst_gndr))='F' then 'Female'
			when UPPER(TRIM( cst_gndr)) = 'M' then 'Male'
			else 'n/a'
			end as cst_gndr,
		cst_create_date
		from (
		select *,
		ROW_NUMBER() over(partition by cst_id order by cst_create_date desc) as flag_date
		from bronze.crm_cust_info
		) t
		where t.flag_date =1

---inserting cleaned data in silver.prd_info from bronze.prd_info

insert into silver.crm_prd_info(
								prd_id,
								prd_key,	
								prd_nm,
								cat_id,
								cat_prd_key,
								prd_cost ,
								prd_line,
								prd_start_dt,
								prd_end_dt)
	select 
		prd_id,
		prd_key,
		prd_nm,
		trim(replace(SUBSTRING(prd_key,1,5),'-','_' )) as cat_id,
		SUBSTRING(prd_key,7,LEN(prd_key)) as cat_prd_key,
		coalesce(prd_cost,0) as prd_cost,
		CASE WHEN prd_line = 'R' then 'Road'
			 when prd_line = 'M' then 'Mountain'
			 when prd_line = 'S' then 'Other Sales'
			 when prd_line = 'T' then 'Touring'
			 else 'n/a' end as prd_line,
		prd_start_dt,
		dateadd(day,-1,lead(prd_start_dt) over (partition by prd_key order by prd_start_dt)) as prd_end_dt
		from bronze.crm_prd_info 

--- inserting cleaned data in silver.sales_details from bronze.sales_details

truncate table silver.crm_sales_details
insert into silver.crm_sales_details(
									sls_ord_num,
									sls_prd_key,
									sls_cust_id,
									sls_order_dt,
									sls_ship_dt,
									sls_due_dt,
									sls_sales,
									sls_quantity,
									sls_price 
									)
select sls_ord_num,
		sls_prd_key,
		sls_cust_id,
		case 
			when LEN(sls_order_dt) != 8 then null
			else
			cast(CAST(sls_order_dt AS varchar) AS date) end as sls_order_dt,
		case 
			when LEN(sls_ship_dt) != 8 then null
			else
			cast(CAST(sls_ship_dt AS varchar) AS date) end as sls_ship_dt,
		case 
			when LEN(sls_due_dt) != 8 then null
			else
			cast(CAST(sls_due_dt AS varchar) AS date) end as sls_due_dt,
		case 
			when sls_sales IS NULL  or sls_sales <= 0 OR sls_sales != sls_quantity * abs(sls_price)
			then sls_quantity * abs(sls_price) 
			else sls_sales end sls_sales,
		sls_quantity,
		case 
			when sls_price IS null OR sls_price <= 0 
			then ABS(sls_sales)/nullif(sls_quantity,0)
			else sls_price end as sls_price
		from bronze.crm_sales_details

--- inserting cleaned data in silver.sales_details from bronze.sales_details

select * from silver.crm_sales_details
